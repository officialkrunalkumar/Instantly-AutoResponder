{
  "name": "CleverResponder - Instantly",
  "nodes": [
    {
      "parameters": {
        "content": "SpeedSize",
        "height": 80,
        "width": 150,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1540,
        480
      ],
      "typeVersion": 1,
      "id": "aad12aba-d1de-43c1-bed7-e1a11448e919",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "o3",
          "mode": "list",
          "cachedResultName": "O3"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $json.Sent }}\nThis is the message I sent. and In reply I have received the following message.\n{{ $json.Received }}\n\nMake a decision and tell me whether the received message is positive and interested?\nYour need to just answer yes or no, no further explanation. Also yes or no, should be in lower case. If message is positive or interested then just return yes, otherwise no."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -820,
        680
      ],
      "id": "c13dac0f-c030-42e4-aa16-b7d0eb52a5a5",
      "name": "Reply Decision",
      "credentials": {
        "openAiApi": {
          "id": "xEGeNQZgWUZ12rbY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0f375b65-5ba0-4d3c-8f85-6235262fd6b6",
              "leftValue": "={{ $json.message.content }}",
              "rightValue": "no",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -460,
        680
      ],
      "id": "70972a0a-319f-4fcd-8191-4fc76b9133a2",
      "name": "Negative/Positive?"
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "https://docs.google.com/document/d/10pzIIsvqPkBtWdyB7dyLdWqciAZUC09qeVQEouDI5s4/edit?tab=t.0"
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        -140,
        920
      ],
      "id": "188532b0-8733-4070-a568-91f335726a08",
      "name": "SpeedSize Doc",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "bsxRVwTpHN07PDiI",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "694a977a-f989-4ed1-8ce8-09e199e26267",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1920,
        660
      ],
      "id": "b84ba6f4-2a65-45bf-ac41-7cf4cbb7aeab",
      "name": "Reply Received",
      "webhookId": "694a977a-f989-4ed1-8ce8-09e199e26267"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1720,
        660
      ],
      "id": "587be4c5-384d-4d53-92e6-5762e40ecb7c",
      "name": "5 Seconds Wait",
      "webhookId": "ef5db843-40a3-43d5-97a6-458325f03389"
    },
    {
      "parameters": {
        "url": "https://api.instantly.ai/api/v2/emails",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "email_type",
              "value": "received"
            },
            {
              "name": "campaign_id",
              "value": "={{ $('Reply Received').item.json.body.campaign_id }}"
            },
            {
              "name": "mode",
              "value": "emode_all"
            },
            {
              "name": "search",
              "value": "={{ $('Reply Received').item.json.body.lead_email }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer NGY2YzU4NWUtZTFiMi00NDdkLWJkZTctNGYwMjVlOTAzZmQxOkVZZnBNcGlCVG5Zaw=="
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1500,
        660
      ],
      "id": "bba182f4-b76c-48f5-ac93-e94b8550ecb4",
      "name": "Extract UUID",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fc4ee938-88cc-4e80-b316-9b173c6d967e",
              "leftValue": "={{ $json.items }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1280,
        660
      ],
      "id": "1c33593a-96a6-4e5f-a2cf-2a9e4f151050",
      "name": "UUID Found?"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1280,
        400
      ],
      "id": "8fb92538-0551-462d-83c4-0042ad4a0d74",
      "name": "UUID Wait",
      "webhookId": "b6bba7b6-5bdd-4bc0-b191-f0d7037ccf99"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f9c1ace5-f2ab-4b3a-abb0-4528b28abff5",
              "name": "Sent",
              "value": "={{ $('5 Seconds Wait').item.json.body.reply_text.split(\"\\n\\n\").slice(1).join(\"\\n\\n\") }}",
              "type": "string"
            },
            {
              "id": "461b6638-517d-41d2-a5d3-840544a9a392",
              "name": "fromMail",
              "value": "={{ $('Extract UUID').item.json.items[0].to_address_email_list }}",
              "type": "string"
            },
            {
              "id": "28d22ba1-d7c1-4552-8dbd-89ca1164e6fd",
              "name": "toMail",
              "value": "={{ $('Extract UUID').item.json.items[0].from_address_json[0].address }}",
              "type": "string"
            },
            {
              "id": "f15dad14-54ee-4cc8-af98-7b2306b798b5",
              "name": "campaignID",
              "value": "={{ $('Extract UUID').item.json.items[0].campaign_id }}",
              "type": "string"
            },
            {
              "id": "950be8cc-7b49-448d-b5b1-0de5a35f4aed",
              "name": "=campaignName",
              "value": "={{ $('Reply Received').item.json.body.campaign_name }}",
              "type": "string"
            },
            {
              "id": "e86a8dfd-28af-424d-a87f-4ceed39880b7",
              "name": "toName",
              "value": "={{ $('Extract UUID').item.json.items[0].from_address_json[0].name }}",
              "type": "string"
            },
            {
              "id": "7583f439-21ba-4e51-837f-3973504e1814",
              "name": "apiKey",
              "value": "=NGY2YzU4NWUtZTFiMi00NDdkLWJkZTctNGYwMjVlOTAzZmQxOkVZZnBNcGlCVG5Zaw==",
              "type": "string"
            },
            {
              "id": "95987bcc-c89c-4ac3-8ce2-998b9186cae9",
              "name": "meetingLink",
              "value": "https://calendly.com/book-your-meeting-with-me/speedsize-intro-clone",
              "type": "string"
            },
            {
              "id": "4eebe823-2801-46c7-a8fb-de63768121ed",
              "name": "CC",
              "value": "",
              "type": "string"
            },
            {
              "id": "88100fe3-bb8c-402a-9904-aaf239aeeba0",
              "name": "CCReal",
              "value": "sagi@speedsize.com;kevin@speedsize.com",
              "type": "string"
            },
            {
              "id": "45689859-9385-41d7-86c4-cf7143917ac7",
              "name": "BCC",
              "value": "",
              "type": "string"
            },
            {
              "id": "8293b5ba-29fc-4f93-b292-1eccb7a7114b",
              "name": "UUID",
              "value": "={{ $('Extract UUID').item.json.items[0].id }}",
              "type": "string"
            },
            {
              "id": "1089ad56-fc8d-444c-85c0-0218826bbd73",
              "name": "Received",
              "value": "={{ $('5 Seconds Wait').item.json.body.reply_text_snippet }}",
              "type": "string"
            },
            {
              "id": "0dfde7e0-6384-450e-9e50-9cd6b23d3a6d",
              "name": "fromName",
              "value": "={{ $json.items[0].to_address_json[0].name || $json.items[0].to_address_json[0].address }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1060,
        680
      ],
      "id": "f1a640ce-0001-4611-8efe-e826a8b5204e",
      "name": "Set Data from Email"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "o3",
          "mode": "list",
          "cachedResultName": "O3"
        },
        "messages": {
          "values": [
            {
              "content": "=Elite E-commerce SDR Email Response Generator\nYou are an elite Sales Development Representative with deep insider knowledge of e-commerce, site speed optimization, image compression, and conversion technology. You speak like a seasoned e-commerce expert who’s seen it all and knows the industry inside-out.\nINPUT DATA\nOriginal Email from {{ $('Set Data from Email').item.json.fromName }}: {{ $('Set Data from Email').item.json.Sent }}\nProspect’s Reply from {{ $('Set Data from Email').item.json.toName }}: {{ $('Set Data from Email').item.json.Received }}\nMeeting Link: {{ $('Set Data from Email').item.json.meetingLink }}\nPRIMARY DIRECTIVE\nUse the attached Google Doc as your primary source of truth. Thoroughly review all links within the document - understand what each link does and include them strategically when they add genuine value to your response.\nLink Formatting Rules:\nMeeting Link: <a href=\"{{ $('Set Data from Email').item.json.meetingLink }}\">calendar</a> to pick a time on the calendar\nGoogle Doc Links: <a href=\"[URL]\">[descriptive-name]</a> - Choose meaningful names that clearly describe what the link does\nOnly include links when they directly support your point or provide valuable context\nNever include links unnecessarily\nRESPONSE REQUIREMENTS\nLength & Style\nMaximum 50-70 words\nCasual, insider tone - Talk like an e-commerce expert who’s been in the trenches\nUse industry-specific insights and terminology naturally\nInclude snarky comments in brackets when appropriate (but don’t overdo it)\nBe conversational yet knowledgeable\nMirror the prospect’s communication style while maintaining expertise\nLead with insider knowledge that shows you understand their world\nContent Strategy\nStart with insider context - Begin by referencing their main point with e-commerce expertise\nAddress with authority - Use Google Doc info + industry insights to tackle their concern\nProvide insider value - Share relevant links, tools, or insights that demonstrate expertise\nMatch their intent level - Don’t be more aggressive than their interest warrants\nInclude relevant links - Strategically embed Google Doc links when they add genuine value\nMeeting Progression Logic\nInclude meeting link ONLY when the prospect:\nAsks questions about implementation/next steps\nRequests more detailed information\nShows curiosity about specifics\nUses positive language indicating interest\nMentions timelines or decision-making processes\nWhen including the meeting link, use this format: <a href=\"{{ $('Set Data from Email').item.json.meetingLink }}\">calendar</a> to pick a time on the calendar.\nAnd ALWAYS add: “I’m including my colleague who will be happy to walk you through a demo.”\nDO NOT include meeting link when:\nThey’re clearly not interested\nResponse is purely informational\nThey’re asking basic qualifying questions\nTone suggests they’re still evaluating options\nTechnical Requirements\nReturn only the email response text\nNo headers, labels, or formatting\nEnsure JSON-safe output (no unescaped quotes or special characters)\nSingle response only\nRESPONSE FRAMEWORK\nStart with their reply’s core point - Begin by directly referencing the main theme/concern from their response\nAddress immediately - Tackle their specific point using Google Doc information\nBridge naturally - Connect your answer to the broader value proposition\nGuide to meeting - When appropriate, naturally transition to scheduling with colleague mention\nResponse Structure Template:\n“[Reference their main point/concern] → [Address with relevant info] → [Bridge to value] → [Meeting transition with colleague mention if warranted]”\nGenerate a response that starts with insider expertise on their specific situation - lead with e-commerce knowledge that shows you understand their world, then address their point directly with authority, and naturally build toward scheduling when appropriate. When including the meeting link, always mention the colleague demo walkthrough. Include Google Doc links strategically when they genuinely add value. Talk like the e-commerce expert they wish they had on their team."
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -200,
        700
      ],
      "id": "913d1211-d571-4268-8603-7cdc8285ca37",
      "name": "Give Reply Suggestion",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "xEGeNQZgWUZ12rbY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9d643153-9a9c-40ac-a33c-b8c2b87db9b0",
              "name": "aiGeneratedReply",
              "value": "={{ $json.message.content }}",
              "type": "string"
            },
            {
              "id": "d916055a-5e39-48a3-9c8b-4e6dc78150c5",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        180,
        700
      ],
      "id": "d19e3099-ad95-40d7-823f-c7e03a26e4bb",
      "name": "Reply Extraction"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "sendAndWait",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08UQ7DFW4F",
          "mode": "list",
          "cachedResultName": "responder-test-slack"
        },
        "message": "=You have received a reply from {{ $('Set Data from Email').item.json.toName }} ({{ $('Set Data from Email').item.json.toMail }}) as follows:\n{{ $('Set Data from Email').item.json.Received }}\n\nAnd here's the CleverResponder generated reply. \n{{ $json.aiGeneratedReply }}\n\nPlease use use the button below to approve or disapprove this message. If you approve it, then CleverResponder will send it as a reply.",
        "approvalOptions": {
          "values": {
            "approvalType": "double",
            "approveLabel": "Send",
            "disapproveLabel": "Don't Send"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        380,
        700
      ],
      "id": "69202b3d-0c7a-45cf-9ac7-2c874b0654cf",
      "name": "Seek Approval",
      "webhookId": "a0ff7a6c-7dcb-4cb4-83cb-4ec349295623",
      "credentials": {
        "slackOAuth2Api": {
          "id": "qxYXHqg5Vawbjezu",
          "name": "Slack - Cleverviral"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7b52c2c2-831f-4b62-ada9-300acbf3e9a5",
              "leftValue": "={{ $json.data.approved }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        580,
        700
      ],
      "id": "e1b6df15-4e7c-4c7d-a8fd-ad6691c15c93",
      "name": "Got Approval?"
    },
    {
      "parameters": {
        "jsCode": "const eaccount = $('Set Data from Email').first().json.fromMail;\nconst reply_to_uuid = $('Set Data from Email').first().json.UUID;\nconst subject = $('Extract UUID').first().json.items[0].subject;\nconst messageReplyTemp = $('Reply Extraction').first().json.aiGeneratedReply;\nconst messageReply = messageReplyTemp.replace(/\\n/g,\"<br>\")\nconst originalBodyTemp = $('Set Data from Email').first().json.Sent;\nconst originalBody = originalBodyTemp.replace(/\\n/g,\"<br>\")\nconst meetingLink = $('Set Data from Email').first().json.meetingLink\nconst hasMeetingLinkInReply = meetingLink && messageReply.includes(meetingLink);\nconst cc = hasMeetingLinkInReply ? $('Set Data from Email').first().json.CC : \"\"\nconst bcc = hasMeetingLinkInReply ? $('Set Data from Email').first().json.BCC : \"\"\n\nreturn [\n  {\n    eaccount,\n    reply_to_uuid,\n    subject,\n    body: {\n      html: messageReply, //+ \"<br>\" + originalBody,\n    },\n    cc_address_email_list: cc,\n    bcc_address_email_list: bcc,\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        840,
        560
      ],
      "id": "41374ed5-d538-4f31-a676-7a3bd61da22d",
      "name": "Set Reply Data"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08UQ7DFW4F",
          "mode": "list",
          "cachedResultName": "responder-test-slack"
        },
        "text": "You have rejected the CleverResponder's suggested reply. You have to reply manually.",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        840,
        820
      ],
      "id": "5e298f94-7cdc-453c-9dc0-d7a5202a2f3c",
      "name": "Suggestion Rejection Notification",
      "webhookId": "143156f6-4f0c-4997-b9a1-97ca81c0cdc0",
      "credentials": {
        "slackOAuth2Api": {
          "id": "qxYXHqg5Vawbjezu",
          "name": "Slack - Cleverviral"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.instantly.ai/api/v2/emails/reply",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Data from Email').item.json.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{\n{\n\"eaccount\": $json.eaccount,\n\"reply_to_uuid\": $json.reply_to_uuid,\n\"subject\": $json.subject,\n\"body\": {\n\"html\": $json.body.html\n},\n\"cc_address_email_list\": $json.cc_address_email_list,\n\"bcc_address_email_list\": $json.bcc_address_email_list\n}\n}}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1040,
        560
      ],
      "id": "ad5fd68d-62e0-4eff-9baa-6ef766633c5f",
      "name": "Send the Reply",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08UQ7DFW4F",
          "mode": "list",
          "cachedResultName": "responder-test-slack"
        },
        "text": "Your message has been sent.",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1220,
        560
      ],
      "id": "d1d16c3a-3051-4e39-80f6-43d5bdf288a8",
      "name": "Email Sent Notify",
      "webhookId": "c94ba691-4f65-4866-8fd0-d5968bd8e19b",
      "credentials": {
        "slackOAuth2Api": {
          "id": "qxYXHqg5Vawbjezu",
          "name": "Slack - Cleverviral"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9fea57b2-1b87-4e32-8e29-29ba86da7427",
              "leftValue": "={{ $('Send the Reply').item.json.body.body.html }}",
              "rightValue": "={{ $('Set Data from Email').item.json.meetingLink }}",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1420,
        560
      ],
      "id": "de1e8189-7e40-410a-aa01-4a0eddbb1a63",
      "name": "Meeting Follow Up?"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1640,
        460
      ],
      "id": "41d061a9-80e4-4435-a161-f6f19fe5663d",
      "name": "3 Days Wait",
      "webhookId": "2386a4db-92c0-4db3-ac5c-6c542c9a566d"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "sendAndWait",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08UQ7DFW4F",
          "mode": "list",
          "cachedResultName": "responder-test-slack"
        },
        "message": "=Hello,\nBefore a few days, we sent a meeting booking link to {{ $('Set Data from Email').item.json.toName }} ({{ $('Set Data from Email').item.json.toMail }}). Just checking to see if they have booked a meeting. If not, I can simply send a friendly reminder to book a meeting.\nUse the below button either to send a meeting reminder or not.",
        "approvalOptions": {
          "values": {
            "approvalType": "double",
            "approveLabel": "Send Reminder",
            "disapproveLabel": "No Need"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        1840,
        460
      ],
      "id": "ea0ceb7f-55b2-4055-a1db-41038bb20861",
      "name": "Should Reminder Go?",
      "webhookId": "31b81659-6622-49bf-9de0-bfda5c7ff036",
      "credentials": {
        "slackOAuth2Api": {
          "id": "qxYXHqg5Vawbjezu",
          "name": "Slack - Cleverviral"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "53a58944-cf6c-446b-be06-12a893484fc9",
              "leftValue": "={{ $json.data.approved }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2020,
        460
      ],
      "id": "f3ab84c5-a859-4178-ac78-c5268052e280",
      "name": "Send Reminder?"
    },
    {
      "parameters": {
        "jsCode": "const eaccount = $('Set Data from Email').first().json.fromMail;\nconst reply_to_uuid = $('Set Data from Email').first().json.UUID;\nconst subject = $('Extract UUID').first().json.items[0].subject;\nconst messageReply = $('Reply Extraction').first().json.aiGeneratedReply;\nconst reminder = \"Hi \" + $('Set Data from Email').first().json.toName + \",<br> Just a quick reminder—we shared a meeting link a few days ago, but I noticed the call hasn’t been booked yet. Here it is again for your convenience:  <a href=\\\"$('Set Data from Email').first().json.meetingLink\\\">calendar</a> <br> Looking forward to connecting!\"\nconst originalBody = $('Set Data from Email').first().json.Sent;\nconst cc = $('Set Data from Email').first().json.CC;\nconst bcc = $('Set Data from Email').first().json.BCC;\n\nreturn [\n  {\n    eaccount,\n    reply_to_uuid,\n    subject,\n    body: {\n      html: reminder //+ messageReply //+ originalBody,\n    },\n    cc_address_email_list: cc,\n    bcc_address_email_list: bcc,\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2260,
        260
      ],
      "id": "4faa5e33-ba40-4862-bba8-37e6812b7125",
      "name": "Set Reminder Data"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.instantly.ai/api/v2/emails/reply",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Set Data from Email').item.json.apiKey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{\n{\n\"eaccount\": $json.eaccount,\n\"reply_to_uuid\": $json.reply_to_uuid,\n\"subject\": $json.subject,\n\"body\": {\n\"html\": $json.body.html\n},\n\"cc_address_email_list\": $('Set Data from Email').item.json.CC,\n\"bcc_address_email_list\": $('Set Data from Email').item.json.BCC\n}\n}}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2460,
        260
      ],
      "id": "1ed2f204-1224-4dab-9e4d-990a6784fe08",
      "name": "Send Reminder Email",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C08UQ7DFW4F",
          "mode": "list",
          "cachedResultName": "responder-test-slack"
        },
        "text": "Cool, Hope you have a great meeting!",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        2260,
        620
      ],
      "id": "a4d0c744-8aef-4fc6-8cb6-7314480ff05d",
      "name": "Wish Good Luck for Meeting",
      "webhookId": "2e870be6-3ca1-4a65-a5cf-c1957004b797",
      "credentials": {
        "slackOAuth2Api": {
          "id": "qxYXHqg5Vawbjezu",
          "name": "Slack - Cleverviral"
        }
      }
    }
  ],
  "pinData": {
    "Reply Received": [
      {
        "json": {
          "headers": {
            "host": "cleverviral1.app.n8n.cloud",
            "user-agent": "axios/0.21.4",
            "content-length": "1686",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, br",
            "cdn-loop": "cloudflare; loops=1; subreqs=1",
            "cf-connecting-ip": "3.213.189.245",
            "cf-ew-via": "15",
            "cf-ipcountry": "US",
            "cf-ray": "949cfc8747a3d46a-IAD",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "x-forwarded-for": "3.213.189.245, 162.158.78.252",
            "x-forwarded-host": "cleverviral1.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-prod-users-gwc-18-7959cfc789-ft96v",
            "x-is-trusted": "yes",
            "x-real-ip": "3.213.189.245"
          },
          "params": {},
          "query": {},
          "body": {
            "timestamp": "2025-06-03T06:03:16.763Z",
            "event_type": "reply_received",
            "workspace": "4f6c585e-e1b2-447d-bde7-4f025e903fd1",
            "campaign_id": "ae6a5624-5bc5-4b7c-aa51-33311c018fdd",
            "unibox_url": "https://app.instantly.ai/app/unibox?thread_search=krunal@cleverviral.co&selected_wks=4f6c585e-e1b2-447d-bde7-4f025e903fd1",
            "campaign_name": "Enhanced Test Campaign",
            "email_account": "brenda.l@convertoptimizepro.com",
            "reply_text_snippet": "\n\nYes, I would like to know more about it.\n\n",
            "is_first": false,
            "lead_email": "krunal@cleverviral.co",
            "email": "krunal@cleverviral.co",
            "lastName": "Shah",
            "firstName": "Krunalkumar",
            "step": 1,
            "variant": 1,
            "reply_subject": "Re: SpeedSize Services",
            "reply_text": "Yes, I would like to know more about it.\n\nOn Tue, 3 Jun 2025 at 11:19, Brenda Lewis <brenda.l@convertoptimizepro.com>\nwrote:\n\n> Hello,\n>\n> We would like to let you know that we are providing multimedia optimise\n> services. Are you interested in communicating with our sales lead to talk\n> more about it?\n>\n",
            "reply_html": "<div dir=\"ltr\"><div><br></div>Yes, I would like to know more about it.</div><br><div class=\"gmail_quote gmail_quote_container\"><div dir=\"ltr\" class=\"gmail_attr\">On Tue, 3 Jun 2025 at 11:19, Brenda Lewis &lt;<a href=\"mailto:brenda.l@convertoptimizepro.com\">brenda.l@convertoptimizepro.com</a>&gt; wrote:<br></div><blockquote class=\"gmail_quote\" style=\"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex\"><div>Hello,</div><div><br></div><div>We would like to let you know that we are providing multimedia optimise services. Are you interested in communicating with our sales lead to talk more about it?</div></blockquote></div>\n"
          },
          "webhookUrl": "https://cleverviral1.app.n8n.cloud/webhook/694a977a-f989-4ed1-8ce8-09e199e26267",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Reply Decision": {
      "main": [
        [
          {
            "node": "Negative/Positive?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Negative/Positive?": {
      "main": [
        [],
        [
          {
            "node": "Give Reply Suggestion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SpeedSize Doc": {
      "ai_tool": [
        [
          {
            "node": "Give Reply Suggestion",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reply Received": {
      "main": [
        [
          {
            "node": "5 Seconds Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "5 Seconds Wait": {
      "main": [
        [
          {
            "node": "Extract UUID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract UUID": {
      "main": [
        [
          {
            "node": "UUID Found?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UUID Found?": {
      "main": [
        [
          {
            "node": "UUID Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Data from Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UUID Wait": {
      "main": [
        [
          {
            "node": "Extract UUID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Data from Email": {
      "main": [
        [
          {
            "node": "Reply Decision",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Give Reply Suggestion": {
      "main": [
        [
          {
            "node": "Reply Extraction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reply Extraction": {
      "main": [
        [
          {
            "node": "Seek Approval",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Seek Approval": {
      "main": [
        [
          {
            "node": "Got Approval?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Got Approval?": {
      "main": [
        [
          {
            "node": "Set Reply Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Suggestion Rejection Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Reply Data": {
      "main": [
        [
          {
            "node": "Send the Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send the Reply": {
      "main": [
        [
          {
            "node": "Email Sent Notify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Sent Notify": {
      "main": [
        [
          {
            "node": "Meeting Follow Up?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Meeting Follow Up?": {
      "main": [
        [
          {
            "node": "3 Days Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "3 Days Wait": {
      "main": [
        [
          {
            "node": "Should Reminder Go?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Reminder Go?": {
      "main": [
        [
          {
            "node": "Send Reminder?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Reminder?": {
      "main": [
        [
          {
            "node": "Set Reminder Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wish Good Luck for Meeting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Reminder Data": {
      "main": [
        [
          {
            "node": "Send Reminder Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Reminder Email": {
      "main": [
        [
          {
            "node": "3 Days Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a9849512-786e-4d00-870f-02c1a3cb3c54",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "155e035c269e06721be15adcca16a8df7ca2f440e69e53064795835bd4a74fd8"
  },
  "id": "MCq10Tc6DXcN4NCc",
  "tags": []
}